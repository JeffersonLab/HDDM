#!/bin/bash
#
#  hddm-schema: create a xml schema based on a hddm template
#
#  Both templates and schemas are themselves well-formed xml documents,
#  so the transformation can be done automatically using XSLT tools.
#  This implementation uses Xalan from xml.apache.org to carry out the
#  transformation.  The output from the transform is then validated by
#  the XercesDOMParser before printing it on standard output.
#
#  author: richard.t.jones at uconn.edu
#  version: original in perl, September 15, 2003
#
#  version 1.1, February 12, 2021
#  - xerces-perl is no longer supported, convert to bash script
#

function usage() {
   cat << eoi

Usage: hddm-schema myfile.hddm

extracts metadata from the header of myfile.hddm and writes to stdout
a schema describing the contents.

eoi
}

if [ $# != 1 ]; then
   usage
   exit 1
fi

infile=$1
if [ ! -r "$infile" ]; then
   echo "hddm-schema error - Unable to open input file $infile"
   exit 1
fi

base=$(basename $infile)
tmpxml=".tmp-$base.xml"
tmpxsd=".tmp-$base.xsd"
rm -f $tmpxml $tmpxsd
while IFS= read -r line; do
   echo $line >> $tmpxml
   if echo $line | grep -q "</HDDM>"; then
      break
   fi
done < $infile

hddm_schema_xslt=$(dirname $0)/../schemas/hddm-schema.xsl

# generate the basic schema using XSL transform:
#
#  two translators: xalan-j (java) or xalan-c (c++)
#  chose one of the two following, comment the other
#$XALANCROOT/bin/Xalan -o $tmpxsd $tmpxml $hddm_schema_xslt
xalanj2_classpath=/usr/share/java/xalan-j2.jar:/usr/share/java/xalan-j2-serializer.jar
java -cp $xalanj2_classpath org.apache.xalan.xslt.Process \
       -IN $tmpxml -OUT $tmpxsd -XSL $hddm_schema_xslt -L

if [ $? != 0 ]; then
   if [ ! -x `which java` ]; then
      echo "Please check that java exists in your path and try again"
      exit 9
   else
      echo "hddm-schema: errors returned by Xalan, giving up"
      exit 8
   fi
fi

# check the result for correctness and pretty-print it
hddm_schema_xsd=$(dirname $0)/../schemas/XMLSchema.xsd
xmllint --format --schema $hddm_schema_xsd $tmpxsd 2> /dev/null

if [ $? != 0 ]; then
   if [ ! -x `which xmllint` ]; then
      echo "Please check that xmllint exists in your path and try again"
      exit 7
   else
      echo "hddm-schema: errors returned by xmllint, giving up"
      exit 6
   fi
fi

rm $tmpxml $tmpxsd
exit 0
